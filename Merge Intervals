from os import *
from sys import *
from collections import *
from math import *

from sys import stdin,setrecursionlimit

class Solution:
    def __init__ (self, start, end):
        self.start = start
        self.end = end

def mergeIntervals(intervals):
    # Write your code here.
    intervals.sort()
    # print(intervals)
    # arr=[]
    st=intervals[0][0]
    end=intervals[0][1]
    arr=[]
    while i<len(intervals):
        if intervals[i][0]<=end:
            end=intervals[i][1]
            i+=1
        else:
            arr.append([st,end])
            if i+1<len(intervals):
                st=intervals[i+1][0]
                end=intervals[i][1]
                i+=2
    return arr
    pass
    

n = int(input())
arr1 = list(map(int, stdin.readline().strip().split(" ")))
arr2 = list(map(int, stdin.readline().strip().split(" ")))
arr1.sort()
arr2.sort()
intervals = []
for i in range(n):
    a = Solution(arr1[i], arr2[i])
    intervals.append(a)

res = mergeIntervals(intervals)

for i in range(len(res)):
    print(res[i].start, res[i].end)
