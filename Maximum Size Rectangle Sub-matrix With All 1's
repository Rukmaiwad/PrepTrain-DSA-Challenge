from sys import stdin, stdout, setrecursionlimit
def larRect(ht):
    st=[]
    max_area=0
    n=len(ht)
    for i in range(n+1):
        while st and (i==n or ht[st[-1]]>=ht[i]):
            height=ht[st.pop()]
            if not st:
                width=i
            else:
                width=i-st[-1]-1
            max_area=max(max_area,height*width)
        st.append(i)
    return max_area
def maximalAreaOfSubMatrix(matrix, N, M):
    max_area=0
    dp=[0]*len(matrix[0])
    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            if matrix[i][j]==1:
                dp[j]+=1
            else:
                dp[j]=0
        area=larRect(dp)
        max_area=max(max_area,area)
    return max_area

    # Write your code here.
    pass


# Taking input using fast I/0
def takeInput():
    N, M = list(map(int, stdin.readline().strip().split(" ")))
    mat = list()
    for i in range(N):
        mat.append(list(map(int, stdin.readline().strip().split(" "))))

    return N, M, mat


tc = int(input())
while tc > 0:
    N, M, mat = takeInput()
    ans = maximalAreaOfSubMatrix(mat, N, M)
    stdout.write(str(ans) + "\n")
    tc -= 1
